{
    "contents" : "#' Valid/Invalid Air Force Specialty Codes (AFSCs)\n#'\n#' Determine which AFSCs are valid or invalid.\n#'\n#' @rdname afsc_validate\n#' @param x A character vector containing AFSCs.\n#' @param allow_X Logical indicating wether or not the \\code{\"X\"} placeholder is\n#'   allowed. Default is \\code{FALSE}.\n#' @param unique_only Logical indicating wether or not only the unique AFSCs\n#'   should be returned. Default is \\code{FALSE}.\n#' @return Returns a logical vector of the same length as its argument \\code{x},\n#'   containing \\code{TRUE} for those elements that are considered as valid\n#'   AFSCs, and \\code{FALSE} otherwise.\n#' @export\nis_valid_afsc <- function(x, allow_X = FALSE) {\n  !is.na(afsc_type(x, allow_X = allow_X))\n}\n\n\n#' @rdname afsc_validate\n#' @export\nget_invalid_afscs <- function(x, allow_X = FALSE, unique_only = FALSE) {\n  invalid <- x[!is_valid_afsc(x, allow_X = allow_X)]\n  if (unique_only) {\n    unique(invalid)\n  } else {\n    invalid\n  }\n}\n\n\n#' @rdname afsc_validate\n#' @export\nget_valid_afscs <- function(x, allow_X = FALSE, unique_only = FALSE) {\n  valid <- x[is_valid_afsc(x, allow_X = allow_X)]\n  if (unique_only) {\n    unique(valid)\n  } else {\n    valid\n  }\n}\n",
    "created" : 1449164152207.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2560142949",
    "id" : "782FBC06",
    "lastKnownWriteTime" : 1449164355,
    "path" : "~/Desktop/Dropbox/devel/afsc/R/afsc-validate.R",
    "project_path" : "R/afsc-validate.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}